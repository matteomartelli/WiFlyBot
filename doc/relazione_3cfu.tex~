\documentclass[a4paper,11pt]{report}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{lmodern}
\usepackage{hyperref}

\title{TITOLO PROVVISORIO}
\author{Matteo Martelli}

\begin{document}

\maketitle
\tableofcontents

\begin{abstract}
\end{abstract}

\chapter{Introduzione}

\section{Scenari di Disaster Recovery}

\section{STEMNET}

\section{Oltre la simulazione}

\chapter{Piano di Processo}

\section{Motivazioni}

\section{Obbiettivi}
Gli obbiettivi sono..

\section{Risorse e strumenti impiegati}
\begin{itemize}
  \item Hardware
  \begin {itemize}
    \item Arduino Uno: piattaforma hardware programmabile tramite seriale USB. 
      Monta un microcontrollore ATmega328P, 14 pin I/O digitali e 6 pin I/O analogici.\\
      \url{http://arduino.cc/en/Main/ArduinoBoardUno} 
    \item Magician Chassis ROB-10825: piattaforma robot. Monta due motori con ruote da 65mm e una rotella posteriore.\\
        \url{https://www.sparkfun.com/products/10825}
    \item Motor Driver 1A Dual TB6612FNG: scheda per il controllo dei motori. Può controllare fino a due motori.\\
        \url{https://www.sparkfun.com/products/9457}
    \item Wireless Proto Shield: scheda per connettere facilmente dei moduli wireless all'Arduino board.\\
        \url{http://arduino.cc/en/Main/ArduinoWirelessProtoShield}
    \item WiFly Shield RN-XV: scheda che incorpora il modulo Wi-Fi RN171. Permette di connettersi ad una rete Wi-Fi 
        in modalità infrastructure o Ad-Hoc.\\
        \url{http://rovingnetworks.com/products/RN171XV}
    \item Due interfaccie Wi-Fi su sistema GNU Linux.  
  \end {itemize}
  \item Software e Linguaggi di Programmazione
  \begin {itemize}
    \item Wiring per Arduino: è una piattaforma di sviluppo open source composta da un linguaggio di programmazione derivato da C e C++ ed un ambiente di sviluppo integrato (Integrated Development Environment o IDE) con elementi per gestire l'hardware dell'Arduino Board.
    \item Python per la parte di applicazione GNU Linux.
  \end{itemize}
  
\end{itemize}

\section{Scenario di STEMNET}

\section{Scenario di Progetto}
Nel progetto si fa riferimento ad uno scenario semplificato rispetto a quello esposto in STEMNET.
Ci si vuole ridurre al caso di un singolo sensore STEM-Node (SN) in modo da poterne studiare nello specifico le possibilità implementative.
L'idea è quella di posizionare l'SN tra altri due nodi Wi-Fi, i quali simulerebbero tramite il comportamento delle isole o, tramite movimento manuale l'azione di altri SN.
Il sistema di tutti i nodi Wi-Fi (SN compreso) viene distribuito su una linea retta per facilitarne lo studio iniziale, eliminando le problematiche della determinazione della posizione geografica dei nodi (ci si focalizza sul movimento dipendente esclusivamente dal Link Budget).
Una volta che lo sviluppo di un singolo SN sarà terminato e testato, si passerà ad ampliare lo scenario aggiungendo molteplici SN, apportando le opportune modifiche hardware e software, studiandone poi il comportamento.

\section{Analisi dei Requisiti}
Lo scenario di progetto richiede che:
\begin{itemize}
\item
l'SN sia dotato di almeno un modulo radio (Wi-Fi in questo caso), tramite il quale l'SN possa percepire la potenza di segnale di altri punti radio nel suo raggio di ricezione (determinato dalla sensibilità dello stesso modulo).
\item
l'SN si possa muovere autonomamente e che quindi possa controllare uno o più dispositivi di movimento, quali uno o più motori con delle ruote o delle eliche se si pensa ad un contesto aereo.
\item
l'SN sia in grado di ricevere e trasmettere del traffico di rete, permettendo quindi la comunicazione tra i due nodi Wi-Fi estremi al sistema, anche qual'ora essi non siano nello stesso raggio di copertura.    
\end{itemize}


\chapter{Progettazione}
Si è scelto di utilizzare i componenti hardware elencati nella sezione "Risorse e strumenti impiegati" affinchè potessero venir soddisfatti i requisiti specificati in "Analisi dei Requisiti". L'SN consiste quindi di un Arduino UNO collegato ad un'unità mobile composta da due motori utilizzati per il movimento ed ad un modulo Wi-Fi. 
%TODO spiegazione algoritmo stemnet
La parte software è divisa essenzialmente nelle due parti spiegate di seguito.
\section{Programma Wiring per Arduino}
  Il programma scritto in Wiring per Arduino è la parte di software cuore del progetto. Come già accennato in precedenza, "Wiring" generalmente è una piattaforma di sviluppo open source composta da un linguaggio di programmazione, un ambiente di sviluppo integrato (Integrated Development Environment o IDE) ed un circuito stampato basato su un microcontrollore. Nel nostro caso il linguaggio di programmazione è composto da un ibrido tra C e C++ creato appositamente dal team Arduino. Lo stesso team ha messo a disposizione anche un IDE apposito che facilita l'interfacciamento alla board Arduino (scrittura del codice, compilazione e flashing). Tramite questa parte l'Arduino riesce a controllare il suo movimento, analizzando la potenza di segnale dei nodi connessi alla rete stabilendo se muoversi, in quale direzione e con quale velocità. Prima di effettuare la decisione l'Arduino analizza se la rete è critica ovvero se è a rischio di rottura. Inoltre a priori viene stabilito un fattore di attenuazione della forza di movimento che, insieme alla criticità della rete, costituiscono una "Probabilità di Movimento". L'SN quindi tiene in considerazione la probabilità di movimento prima di prendere la decisione. Questo comporta che l'SN non si muoverà se il rischio di rottura della rete è alto e diminuirà la sua reazione a piccoli stimoli con l'aumentare del fattore di attenuazione. I dettagli implementativi verrano spiegati di seguito nel capitolo 4.
\section{Programma Python per sistemi Linux}
  Il programma scritto in python per sistemi Linux è quella parte del 


\end{document}
